# Generated by Django 5.2.5 on 2025-09-15 12:59

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('complaint_type', models.CharField(choices=[('service_quality', 'Service Quality'), ('employee_absence', 'Employee Absence'), ('staff_rudeness', 'Staff Rudeness'), ('sanitary_conditions', 'Sanitary Conditions'), ('other', 'Other')], help_text='Type of complaint', max_length=50, verbose_name='Complaint Type')),
                ('title', models.CharField(help_text='Complaint title', max_length=200, verbose_name='Title')),
                ('description', models.TextField(help_text='Detailed description of the complaint', verbose_name='Description')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('rejected', 'Rejected'), ('closed', 'Closed')], default='pending', help_text='Current status of the complaint', max_length=20, verbose_name='Status')),
                ('resolution', models.TextField(blank=True, help_text='Resolution of the complaint', verbose_name='Resolution')),
                ('resolved_at', models.DateTimeField(blank=True, help_text='When the complaint was resolved', null=True, verbose_name='Resolved At')),
                ('is_justified', models.BooleanField(blank=True, help_text='Whether the complaint is justified', null=True, verbose_name='Is Justified')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_complaints', to=settings.AUTH_USER_MODEL, verbose_name='Resolved By')),
            ],
            options={
                'verbose_name': 'Complaint',
                'verbose_name_plural': 'Complaints',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ComplaintResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Response to the complaint', verbose_name='Response Text')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaint_responses', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('complaint', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='ratings.complaint', verbose_name='Complaint')),
            ],
            options={
                'verbose_name': 'Complaint Response',
                'verbose_name_plural': 'Complaint Responses',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('current_rating', models.DecimalField(decimal_places=2, default=0.0, help_text='Current average rating (0-5)', max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Current Rating')),
                ('total_reviews', models.PositiveIntegerField(default=0, help_text='Total number of reviews', verbose_name='Total Reviews')),
                ('total_complaints', models.PositiveIntegerField(default=0, help_text='Total number of complaints', verbose_name='Total Complaints')),
                ('resolved_complaints', models.PositiveIntegerField(default=0, help_text='Number of resolved complaints', verbose_name='Resolved Complaints')),
                ('reviews_weight', models.DecimalField(decimal_places=2, default=0.6, help_text='Weight of reviews in rating calculation (0-1)', max_digits=3, verbose_name='Reviews Weight')),
                ('complaints_weight', models.DecimalField(decimal_places=2, default=0.25, help_text='Weight of complaints in rating calculation (0-1)', max_digits=3, verbose_name='Complaints Weight')),
                ('cancellations_weight', models.DecimalField(decimal_places=2, default=0.1, help_text='Weight of cancellations in rating calculation (0-1)', max_digits=3, verbose_name='Cancellations Weight')),
                ('no_show_weight', models.DecimalField(decimal_places=2, default=0.05, help_text='Weight of no-show in rating calculation (0-1)', max_digits=3, verbose_name='No Show Weight')),
                ('is_suspended', models.BooleanField(default=False, help_text='Whether the rating is suspended due to suspicious activity', verbose_name='Is Suspended')),
                ('suspension_reason', models.TextField(blank=True, help_text='Reason for rating suspension', verbose_name='Suspension Reason')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('last_calculated_at', models.DateTimeField(blank=True, help_text='When the rating was last calculated', null=True, verbose_name='Last Calculated At')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Rating',
                'verbose_name_plural': 'Ratings',
            },
        ),
        migrations.CreateModel(
            name='RatingHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_rating', models.DecimalField(decimal_places=2, help_text='Previous rating value', max_digits=3, verbose_name='Old Rating')),
                ('new_rating', models.DecimalField(decimal_places=2, help_text='New rating value', max_digits=3, verbose_name='New Rating')),
                ('change_reason', models.CharField(help_text='Reason for rating change', max_length=100, verbose_name='Change Reason')),
                ('change_description', models.TextField(blank=True, help_text='Detailed description of the change', verbose_name='Change Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rating_changes', to=settings.AUTH_USER_MODEL, verbose_name='Changed By')),
                ('rating', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='ratings.rating', verbose_name='Rating')),
            ],
            options={
                'verbose_name': 'Rating History',
                'verbose_name_plural': 'Rating Histories',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('rating', models.PositiveSmallIntegerField(help_text='Rating from 1 to 5 stars', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Rating')),
                ('title', models.CharField(blank=True, help_text='Review title', max_length=200, verbose_name='Title')),
                ('text', models.TextField(blank=True, help_text='Review text', verbose_name='Text')),
                ('is_approved', models.BooleanField(default=True, help_text='Whether the review is approved by moderators', verbose_name='Is Approved')),
                ('is_suspicious', models.BooleanField(default=False, help_text='Whether the review is marked as suspicious', verbose_name='Is Suspicious')),
                ('moderation_reason', models.TextField(blank=True, help_text='Reason for moderation decision', verbose_name='Moderation Reason')),
                ('toxicity_scores', models.JSONField(default=dict, help_text='Toxicity scores from Google Perspective API', verbose_name='Toxicity Scores')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SuspiciousActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('mass_reviews', 'Mass Reviews'), ('fake_complaints', 'Fake Complaints'), ('rating_manipulation', 'Rating Manipulation'), ('suspicious_patterns', 'Suspicious Patterns'), ('other', 'Other')], help_text='Type of suspicious activity', max_length=50, verbose_name='Activity Type')),
                ('description', models.TextField(help_text='Description of the suspicious activity', verbose_name='Description')),
                ('evidence', models.JSONField(default=dict, help_text='Evidence of suspicious activity', verbose_name='Evidence')),
                ('status', models.CharField(choices=[('detected', 'Detected'), ('investigating', 'Investigating'), ('resolved', 'Resolved'), ('false_positive', 'False Positive')], default='detected', help_text='Current status of the investigation', max_length=20, verbose_name='Status')),
                ('resolution', models.TextField(blank=True, help_text='Resolution of the investigation', verbose_name='Resolution')),
                ('resolved_at', models.DateTimeField(blank=True, help_text='When the investigation was resolved', null=True, verbose_name='Resolved At')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_suspicious_activities', to=settings.AUTH_USER_MODEL, verbose_name='Resolved By')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suspicious_activities', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Suspicious Activity',
                'verbose_name_plural': 'Suspicious Activities',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['content_type', 'object_id'], name='ratings_com_content_9b465b_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['author'], name='ratings_com_author__4a150f_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['complaint_type'], name='ratings_com_complai_834776_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['status'], name='ratings_com_status_d46546_idx'),
        ),
        migrations.AddIndex(
            model_name='complaint',
            index=models.Index(fields=['is_justified'], name='ratings_com_is_just_c972eb_idx'),
        ),
        migrations.AddIndex(
            model_name='complaintresponse',
            index=models.Index(fields=['complaint'], name='ratings_com_complai_20ccea_idx'),
        ),
        migrations.AddIndex(
            model_name='complaintresponse',
            index=models.Index(fields=['author'], name='ratings_com_author__9fc50f_idx'),
        ),
        migrations.AddIndex(
            model_name='rating',
            index=models.Index(fields=['content_type', 'object_id'], name='ratings_rat_content_35c683_idx'),
        ),
        migrations.AddIndex(
            model_name='rating',
            index=models.Index(fields=['current_rating'], name='ratings_rat_current_50a161_idx'),
        ),
        migrations.AddIndex(
            model_name='rating',
            index=models.Index(fields=['is_suspended'], name='ratings_rat_is_susp_28a53a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rating',
            unique_together={('content_type', 'object_id')},
        ),
        migrations.AddIndex(
            model_name='ratinghistory',
            index=models.Index(fields=['rating'], name='ratings_rat_rating__192701_idx'),
        ),
        migrations.AddIndex(
            model_name='ratinghistory',
            index=models.Index(fields=['changed_by'], name='ratings_rat_changed_72cf7a_idx'),
        ),
        migrations.AddIndex(
            model_name='ratinghistory',
            index=models.Index(fields=['created_at'], name='ratings_rat_created_d9f935_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['content_type', 'object_id'], name='ratings_rev_content_b1aa7c_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['author'], name='ratings_rev_author__1788c4_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['rating'], name='ratings_rev_rating_6f72ef_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['is_approved'], name='ratings_rev_is_appr_75744d_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['is_suspicious'], name='ratings_rev_is_susp_bde022_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('content_type', 'object_id', 'author')},
        ),
        migrations.AddIndex(
            model_name='suspiciousactivity',
            index=models.Index(fields=['user'], name='ratings_sus_user_id_530df0_idx'),
        ),
        migrations.AddIndex(
            model_name='suspiciousactivity',
            index=models.Index(fields=['activity_type'], name='ratings_sus_activit_a7c59e_idx'),
        ),
        migrations.AddIndex(
            model_name='suspiciousactivity',
            index=models.Index(fields=['status'], name='ratings_sus_status_c26168_idx'),
        ),
    ]
