# Generated by Django 5.0.3 on 2025-05-13 12:50

import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
import users.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmployeeSpecialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Specialization Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('permissions', models.JSONField(default=dict, help_text='JSON object with specific permissions for this specialization', verbose_name='Permissions')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Employee Specialization',
                'verbose_name_plural': 'Employee Specializations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('system_admin', 'System Administrator'), ('provider_admin', 'Provider Administrator'), ('billing_manager', 'Billing Manager'), ('pet_owner', 'Pet Owner')], help_text='Role of the user in the system', max_length=50, unique=True, verbose_name='User Type')),
            ],
            options={
                'verbose_name': 'User Type',
                'verbose_name_plural': 'User Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, error_messages={'max_length': 'Username is too long.'}, help_text='Optional. Used only if needed.', max_length=150, null=True, verbose_name='Username')),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, help_text='Required. Unique email for authentication.', max_length=254, unique=True, verbose_name='Email Address')),
                ('first_name', models.CharField(blank=True, help_text='Optional.', max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, help_text='Optional.', max_length=150, verbose_name='Last Name')),
                ('date_of_birth', models.DateField(blank=True, help_text='Format: YYYY-MM-DD', null=True, verbose_name='Date Of Birth')),
                ('profile_picture', models.ImageField(blank=True, help_text='Optional. User avatar.', null=True, upload_to='users/%Y/%m/%d/', verbose_name='Profile Picture')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text='Optional. Unique phone number.', max_length=128, region=None, unique=True, verbose_name='Phone Number')),
                ('is_pet_sitter', models.BooleanField(default=False, help_text='Whether the user can provide pet-sitting services', verbose_name='Is Pet Sitter')),
                ('sitter_rating', models.DecimalField(decimal_places=2, default=0.0, help_text='Average rating as a pet sitter', max_digits=3, verbose_name='Sitter Rating')),
                ('sitter_reviews_count', models.PositiveIntegerField(default=0, help_text='Number of reviews as a pet sitter', verbose_name='Sitter Reviews Count')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('user_type', models.ForeignKey(blank=True, help_text='Role of the user in the system.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.usertype', verbose_name='User Type')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProviderForm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider_name', models.CharField(max_length=100, verbose_name='Provider Name')),
                ('provider_address', models.CharField(max_length=200, verbose_name='Provider Address')),
                ('provider_phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Provider Phone')),
                ('documents', models.FileField(upload_to='provider_docs/%Y/%m/%d/', verbose_name='Registration Documents')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Approved At')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_forms', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='provider_forms', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Provider Form',
                'verbose_name_plural': 'Provider Forms',
                'ordering': ['-created_at'],
            },
        ),
    ]
