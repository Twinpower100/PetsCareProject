# Generated by Django 5.2.5 on 2025-09-15 12:58

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('geolocation', '0002_initial'),
        ('pets', '0001_initial'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('participants', models.ManyToManyField(related_name='conversations', to='users.user', verbose_name='Participants')),
            ],
            options={
                'verbose_name': 'Conversation',
                'verbose_name_plural': 'Conversations',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Text')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('is_read', models.BooleanField(default=False, verbose_name='Is Read')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='sitters.conversation', verbose_name='Conversation')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='users.user', verbose_name='Recipient')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='users.user', verbose_name='Sender')),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PetSitting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('status', models.CharField(choices=[('waiting_start', 'Waiting Start'), ('active', 'Active'), ('waiting_end', 'Waiting End'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='waiting_start', max_length=20, verbose_name='Status')),
                ('owner_confirmed_start', models.BooleanField(default=False, verbose_name='Owner Confirmed Start')),
                ('sitter_confirmed_start', models.BooleanField(default=False, verbose_name='Sitter Confirmed Start')),
                ('owner_confirmed_end', models.BooleanField(default=False, verbose_name='Owner Confirmed End')),
                ('sitter_confirmed_end', models.BooleanField(default=False, verbose_name='Sitter Confirmed End')),
                ('review_left', models.BooleanField(default=False, verbose_name='Review Left')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sittings', to='pets.pet', verbose_name='Pet')),
            ],
            options={
                'verbose_name': 'Pet Sitting',
                'verbose_name_plural': 'Pet Sittings',
                'ordering': ['-start_date'],
            },
        ),
        migrations.AddField(
            model_name='conversation',
            name='pet_sitting',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='sitters.petsitting', verbose_name='Pet Sitting'),
        ),
        migrations.CreateModel(
            name='PetSittingAd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('status', models.CharField(choices=[('active', 'Active'), ('closed', 'Closed')], default='active', max_length=20, verbose_name='Status')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='Location')),
                ('max_distance_km', models.PositiveIntegerField(default=5, verbose_name='Max Distance (km)')),
                ('compensation_type', models.CharField(choices=[('paid', 'Paid'), ('unpaid', 'Unpaid')], default='paid', max_length=20, verbose_name='Compensation Type')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sitting_ads', to='users.user', verbose_name='Owner')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sitting_ads', to='pets.pet', verbose_name='Pet')),
                ('structured_address', models.ForeignKey(blank=True, help_text='Structured address for pet sitting location', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sitting_ads', to='geolocation.address', verbose_name='Structured Address')),
            ],
            options={
                'verbose_name': 'Pet Sitting Ad',
                'verbose_name_plural': 'Pet Sitting Ads',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='petsitting',
            name='ad',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sittings', to='sitters.petsittingad', verbose_name='Ad'),
        ),
        migrations.AddField(
            model_name='conversation',
            name='pet_sitting_ad',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='sitters.petsittingad', verbose_name='Pet Sitting Ad'),
        ),
        migrations.CreateModel(
            name='PetSittingResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, verbose_name='Message')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('ad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='sitters.petsittingad', verbose_name='Ad')),
            ],
            options={
                'verbose_name': 'Pet Sitting Response',
                'verbose_name_plural': 'Pet Sitting Responses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='petsitting',
            name='response',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sittings', to='sitters.petsittingresponse', verbose_name='Response'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], verbose_name='Rating')),
                ('text', models.TextField(blank=True, verbose_name='Text')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sitting_reviews', to='users.user', verbose_name='Author')),
                ('history', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='sitters.petsitting', verbose_name='History')),
            ],
            options={
                'verbose_name': 'Review',
                'verbose_name_plural': 'Reviews',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SitterProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, help_text='Description of pet sitting services', verbose_name='Description')),
                ('experience_years', models.PositiveIntegerField(default=0, help_text='Years of experience in pet sitting', verbose_name='Experience Years')),
                ('pet_types', models.JSONField(default=list, help_text='Types of pets the sitter can take care of', verbose_name='Pet Types')),
                ('max_pets', models.PositiveIntegerField(default=1, help_text='Maximum number of pets that can be taken care of at once', verbose_name='Max Pets')),
                ('available_from', models.DateField(blank=True, help_text='Date from which the sitter is available', null=True, verbose_name='Available From')),
                ('available_to', models.DateField(blank=True, help_text='Date until which the sitter is available', null=True, verbose_name='Available To')),
                ('max_distance_km', models.PositiveIntegerField(default=5, help_text='Maximum distance for pet sitting services', verbose_name='Max Distance Km')),
                ('compensation_type', models.CharField(choices=[('paid', 'Paid'), ('unpaid', 'Unpaid')], default='paid', help_text='Type of compensation for services', max_length=20, verbose_name='Compensation Type')),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Hourly rate for paid services', max_digits=6, null=True, verbose_name='Hourly Rate')),
                ('is_verified', models.BooleanField(default=False, help_text='Whether the sitter is verified by the platform', verbose_name='Is Verified')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sitter', to='users.user', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Sitter Profile',
                'verbose_name_plural': 'Sitter Profiles',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='petsittingresponse',
            name='sitter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='sitters.sitterprofile', verbose_name='Sitter'),
        ),
        migrations.AddField(
            model_name='petsitting',
            name='sitter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sittings', to='sitters.sitterprofile', verbose_name='Sitter'),
        ),
    ]
