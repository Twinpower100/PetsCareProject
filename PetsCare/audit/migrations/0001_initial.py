# Generated by Django 5.2.5 on 2025-09-15 14:42

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('logging_enabled', models.BooleanField(default=True, verbose_name='Logging Enabled')),
                ('security_audit_enabled', models.BooleanField(default=True, verbose_name='Security Audit Enabled')),
                ('log_retention_days', models.PositiveIntegerField(default=365, help_text='How long to keep logs in database', verbose_name='Log Retention (days)')),
                ('security_audit_retention_days', models.PositiveIntegerField(default=2555, help_text='How long to keep security audit records', verbose_name='Security Audit Retention (days)')),
                ('log_http_requests', models.BooleanField(default=True, verbose_name='Log HTTP Requests')),
                ('log_database_changes', models.BooleanField(default=True, verbose_name='Log Database Changes')),
                ('log_business_operations', models.BooleanField(default=True, verbose_name='Log Business Operations')),
                ('log_system_events', models.BooleanField(default=True, verbose_name='Log System Events')),
                ('min_log_level', models.CharField(choices=[('DEBUG', 'DEBUG'), ('INFO', 'INFO'), ('WARNING', 'WARNING'), ('ERROR', 'ERROR')], default='INFO', max_length=10, verbose_name='Minimum Log Level')),
                ('auto_cleanup_enabled', models.BooleanField(default=True, verbose_name='Auto Cleanup Enabled')),
                ('cleanup_frequency_days', models.PositiveIntegerField(default=7, verbose_name='Cleanup Frequency (days)')),
                ('critical_operation_notifications', models.BooleanField(default=True, verbose_name='Critical Operation Notifications')),
                ('notification_email', models.EmailField(blank=True, max_length=254, verbose_name='Notification Email')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Audit Setting',
                'verbose_name_plural': 'Audit Settings',
            },
        ),
        migrations.CreateModel(
            name='SecurityAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audit_type', models.CharField(choices=[('role_change', 'Role Change'), ('permission_change', 'Permission Change'), ('invite_management', 'Invite Management'), ('financial_operation', 'Financial Operation'), ('blocking_operation', 'Blocking Operation'), ('moderation_action', 'Moderation Action'), ('ownership_transfer', 'Ownership Transfer'), ('suspicious_activity', 'Suspicious Activity'), ('system_config', 'System Configuration')], max_length=30, verbose_name='Audit Type')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Object ID')),
                ('details', models.JSONField(default=dict, help_text='Detailed information about the security operation', verbose_name='Details')),
                ('old_values', models.JSONField(default=dict, help_text='Previous values before the change', verbose_name='Old Values')),
                ('new_values', models.JSONField(default=dict, help_text='New values after the change', verbose_name='New Values')),
                ('reason', models.TextField(blank=True, help_text='Reason for the security operation', verbose_name='Reason')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Timestamp')),
                ('is_critical', models.BooleanField(default=False, help_text='Mark as critical security operation', verbose_name='Is Critical')),
                ('review_status', models.CharField(choices=[('pending', 'Pending'), ('reviewed', 'Reviewed'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20, verbose_name='Review Status')),
                ('review_comment', models.TextField(blank=True, verbose_name='Review Comment')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Content Type')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_audits', to='users.user', verbose_name='Reviewed By')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='security_audits', to='users.user', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Security Audit',
                'verbose_name_plural': 'Security Audits',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='audit_secur_user_id_fdbc6a_idx'), models.Index(fields=['audit_type', 'timestamp'], name='audit_secur_audit_t_c21f7c_idx'), models.Index(fields=['is_critical', 'timestamp'], name='audit_secur_is_crit_34b7aa_idx'), models.Index(fields=['review_status', 'timestamp'], name='audit_secur_review__3814fb_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('view', 'View'), ('export', 'Export'), ('import', 'Import'), ('block', 'Block'), ('unblock', 'Unblock'), ('invite', 'Invite'), ('accept', 'Accept'), ('reject', 'Reject'), ('transfer', 'Transfer'), ('payment', 'Payment'), ('refund', 'Refund'), ('booking', 'Booking'), ('cancel', 'Cancel'), ('review', 'Review'), ('complaint', 'Complaint'), ('system', 'System')], max_length=20, verbose_name='Action Type')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Object ID')),
                ('details', models.JSONField(default=dict, help_text='Additional details about the action', verbose_name='Details')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('http_method', models.CharField(blank=True, max_length=10, verbose_name='HTTP Method')),
                ('url', models.URLField(blank=True, verbose_name='URL')),
                ('status_code', models.PositiveIntegerField(blank=True, null=True, verbose_name='Status Code')),
                ('execution_time', models.FloatField(blank=True, null=True, verbose_name='Execution Time (seconds)')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Timestamp')),
                ('session_key', models.CharField(blank=True, max_length=40, verbose_name='Session Key')),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name='Content Type')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actions', to='users.user', verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Action',
                'verbose_name_plural': 'User Actions',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='audit_usera_user_id_3f3f51_idx'), models.Index(fields=['action_type', 'timestamp'], name='audit_usera_action__fa86fc_idx'), models.Index(fields=['content_type', 'object_id'], name='audit_usera_content_88873f_idx'), models.Index(fields=['ip_address', 'timestamp'], name='audit_usera_ip_addr_d63944_idx')],
            },
        ),
    ]
