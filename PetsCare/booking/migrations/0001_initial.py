# Generated by Django 5.2.5 on 2025-09-15 12:58

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0001_initial'),
        ('pets', '0001_initial'),
        ('providers', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AbuseRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('period', models.CharField(choices=[('day', 'Day'), ('week', 'Week'), ('month', 'Month'), ('year', 'Year')], help_text='Period for counting cancellations', max_length=10, verbose_name='Period')),
                ('max_cancellations', models.PositiveIntegerField(help_text='Maximum number of cancellations allowed in the period', verbose_name='Max Cancellations')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Abuse Rule',
                'verbose_name_plural': 'Abuse Rules',
                'ordering': ['-is_active', 'period'],
            },
        ),
        migrations.CreateModel(
            name='BookingAutoCompleteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('auto_complete_enabled', models.BooleanField(default=True, verbose_name='Auto Complete Enabled')),
                ('auto_complete_days', models.PositiveIntegerField(default=7, help_text='How many days to wait before auto-completing bookings', verbose_name='Days to Auto Complete')),
                ('auto_complete_status', models.CharField(choices=[('completed', 'Completed'), ('no_show', 'No Show'), ('auto_completed', 'Auto Completed')], default='auto_completed', max_length=20, verbose_name='Auto Complete Status')),
                ('service_periodicity_hours', models.PositiveIntegerField(default=24, help_text='How often to run the auto-completion service', verbose_name='Service Periodicity (hours)')),
                ('service_start_time', models.TimeField(default=datetime.time(3, 0), help_text='When to start the auto-completion service', verbose_name='Service Start Time')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Auto Complete Setting',
                'verbose_name_plural': 'Auto Complete Settings',
            },
        ),
        migrations.CreateModel(
            name='BookingStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('active', 'Active'), ('cancelled_by_client', 'Cancelled by Client'), ('cancelled_by_provider', 'Cancelled by Provider'), ('completed', 'Completed'), ('no_show_by_client', 'No Show by Client'), ('no_show_by_provider', 'No Show by Provider'), ('pending_confirmation', 'Pending Confirmation')], max_length=50, unique=True, verbose_name='Status Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Booking Status',
                'verbose_name_plural': 'Booking Statuses',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(verbose_name='Start Time')),
                ('end_time', models.DateTimeField(verbose_name='End Time')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('code', models.CharField(help_text='Unique booking code', max_length=10, unique=True, verbose_name='Booking Code')),
                ('completed_at', models.DateTimeField(blank=True, help_text='When the booking was completed', null=True, verbose_name='Completed At')),
                ('cancellation_reason', models.TextField(blank=True, help_text='Reason for cancellation', verbose_name='Cancellation Reason')),
                ('cancelled_at', models.DateTimeField(blank=True, help_text='When the booking was cancelled', null=True, verbose_name='Cancelled At')),
                ('cancelled_by', models.ForeignKey(blank=True, help_text='User who cancelled the booking', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancelled_bookings', to=settings.AUTH_USER_MODEL, verbose_name='Cancelled By')),
                ('completed_by', models.ForeignKey(blank=True, help_text='User who completed the booking', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='completed_bookings', to=settings.AUTH_USER_MODEL, verbose_name='Completed By')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='providers.employee', verbose_name='Employee')),
                ('pet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='pets.pet', verbose_name='Pet')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='providers.provider', verbose_name='Provider')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='catalog.service', verbose_name='Service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to='booking.bookingstatus', verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Booking',
                'verbose_name_plural': 'Bookings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingCancellation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True, verbose_name='Reason')),
                ('is_abuse', models.BooleanField(default=False, verbose_name='Is Abuse')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('abuse_rule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cancellations', to='booking.abuserule', verbose_name='Abuse Rule')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cancellations', to='booking.booking', verbose_name='Booking')),
                ('cancelled_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='booking_cancellations', to=settings.AUTH_USER_MODEL, verbose_name='Cancelled By')),
            ],
            options={
                'verbose_name': 'Booking Cancellation',
                'verbose_name_plural': 'Booking Cancellations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Content of the note', verbose_name='Text')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_notes', to='booking.booking', verbose_name='Booking')),
                ('created_by', models.ForeignKey(help_text='User who created the note', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='booking_notes', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Booking Note',
                'verbose_name_plural': 'Booking Notes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BookingPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Amount')),
                ('payment_method', models.CharField(choices=[('cash', 'Cash'), ('card', 'Card'), ('online', 'Online payment')], max_length=50, verbose_name='Payment Method')),
                ('transaction_id', models.CharField(blank=True, max_length=100, verbose_name='Transaction ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='booking.booking', verbose_name='Booking')),
            ],
            options={
                'verbose_name': 'Booking Payment',
                'verbose_name_plural': 'Booking Payments',
            },
        ),
        migrations.CreateModel(
            name='BookingReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(verbose_name='Rating')),
                ('comment', models.TextField(verbose_name='Comment')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='review', to='booking.booking', verbose_name='Booking')),
            ],
            options={
                'verbose_name': 'Booking Review',
                'verbose_name_plural': 'Booking Reviews',
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(help_text='Start time of the slot', verbose_name='Start Time')),
                ('end_time', models.DateTimeField(help_text='End time of the slot', verbose_name='End Time')),
                ('is_available', models.BooleanField(default=True, help_text='Whether the slot is available for booking', verbose_name='Is Available')),
                ('employee', models.ForeignKey(help_text='Employee working in this slot', on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='providers.employee', verbose_name='Employee')),
                ('provider', models.ForeignKey(help_text='Provider where the employee works', on_delete=django.db.models.deletion.CASCADE, related_name='time_slots', to='providers.provider', verbose_name='Provider')),
            ],
            options={
                'verbose_name': 'Time Slot',
                'verbose_name_plural': 'Time Slots',
                'ordering': ['start_time'],
                'indexes': [models.Index(fields=['start_time', 'end_time'], name='booking_tim_start_t_6f5021_idx'), models.Index(fields=['is_available'], name='booking_tim_is_avai_75c118_idx')],
            },
        ),
    ]
